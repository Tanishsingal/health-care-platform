#!/bin/bash

# Health Platform - Production Deployment Script
# This script helps you deploy your health platform to production

echo "üè• Health Platform - Production Deployment"
echo "=========================================="
echo ""

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js is not installed. Please install Node.js 18 or higher."
    exit 1
fi

echo "‚úÖ Node.js version: $(node -v)"
echo ""

# Check if npm is installed
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm is not installed."
    exit 1
fi

echo "‚úÖ npm version: $(npm -v)"
echo ""

# Check for .env file
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  Warning: .env file not found!"
    echo "   Creating .env from .env.example..."
    if [ -f env.example ]; then
        cp env.example .env
        echo "   ‚úÖ Created .env file. Please edit it with your credentials."
    else
        echo "   ‚ùå env.example not found. Please create .env manually."
    fi
    echo ""
fi

# Install dependencies
echo "üì¶ Installing dependencies..."
npm install
if [ $? -ne 0 ]; then
    echo "‚ùå Failed to install dependencies"
    exit 1
fi
echo "‚úÖ Dependencies installed"
echo ""

# Run database migrations
echo "üóÑÔ∏è  Running database migrations..."
if [ -f scripts/run-create-translations.js ]; then
    node scripts/run-create-translations.js
fi
echo "‚úÖ Migrations complete"
echo ""

# Build the application
echo "üèóÔ∏è  Building application..."
npm run build
if [ $? -ne 0 ]; then
    echo "‚ùå Build failed"
    exit 1
fi
echo "‚úÖ Build complete"
echo ""

# Ask deployment target
echo "üöÄ Where would you like to deploy?"
echo "1) Start local production server (npm start)"
echo "2) Deploy to Vercel"
echo "3) Generate Docker image"
echo "4) Exit"
echo ""
read -p "Select option (1-4): " option

case $option in
    1)
        echo ""
        echo "üöÄ Starting production server..."
        echo "   Server will run on http://localhost:3000"
        echo "   Press Ctrl+C to stop"
        echo ""
        npm start
        ;;
    2)
        echo ""
        if ! command -v vercel &> /dev/null; then
            echo "üì¶ Installing Vercel CLI..."
            npm install -g vercel
        fi
        echo "üöÄ Deploying to Vercel..."
        echo ""
        echo "‚ö†Ô∏è  Make sure to set environment variables in Vercel:"
        echo "   - DATABASE_URL"
        echo "   - JWT_SECRET"
        echo "   - NODE_ENV=production"
        echo ""
        read -p "Press Enter to continue with deployment..."
        vercel --prod
        ;;
    3)
        echo ""
        echo "üê≥ Building Docker image..."
        if ! command -v docker &> /dev/null; then
            echo "‚ùå Docker is not installed"
            exit 1
        fi
        docker build -t health-platform:latest .
        echo "‚úÖ Docker image built: health-platform:latest"
        echo ""
        echo "To run the container:"
        echo "  docker run -p 3000:3000 \\"
        echo "    -e DATABASE_URL=your-db-url \\"
        echo "    -e JWT_SECRET=your-secret \\"
        echo "    health-platform:latest"
        ;;
    4)
        echo "üëã Goodbye!"
        exit 0
        ;;
    *)
        echo "‚ùå Invalid option"
        exit 1
        ;;
esac

echo ""
echo "‚úÖ Deployment complete!"
echo ""
echo "üìö For more information, see PRODUCTION_BUILD_GUIDE.md"

